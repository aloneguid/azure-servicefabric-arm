{
   "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
   "contentVersion": "1.0.0.0",
   "parameters": {
      "namePart": {
         "type": "string",
         "metadata": {
            "description": "Name tag"
         }
      },
      "certificateThumbprint": {
         "type": "string"
      },
      "sourceVaultResourceId": {
         "type": "string",
         "metadata": {
            "description": "Resource ID of the key vault where cluster certificate is stored. The format is /subscriptions/<subscription ID>/resourceGroups/<resource group name>/providers/Microsoft.KeyVault/vaults/<vault name>"
         }
      },
      "certificateUrlValue": {
         "type": "string",
         "metadata": {
            "description": "Refers to the location URL in your key vault where the cluster certificate was uploaded. The format is https://<name of the vault>.vault.azure.net:443/secrets/<exact location>"
         }
      },
      "vmInstanceCount": {
         "type": "int",
         "defaultValue": 5,
         "metadata": {
            "description": "Instance count for node type"
         }
      },
      "vmNodeSize": {
         "type": "string",
         "defaultValue": "Standard_D2_V2"
      },
      "clusterSubnetId": {
         "type": "string",
         "defaultValue": null
        },
        "omsLocation": {
            "type": "string",
            "defaultValue": "westeurope",
            "allowedValues": [
                "eastus",
                "westeurope",
                "southeastasia",
                "australiasoutheast",
                "westcentralus",
                "japaneast",
                "uksouth",
                "centralindia",
                "canadacentral"
            ]
      }
   },
   "variables": {
      "clusterName": "[parameters('namePart')]",
      "virtualNetworkName": "vnet",
      "addressPrefix": "10.0.0.0/16",
      "subnet1Name": "Subnet-1",
      "subnet1Prefix": "10.0.0.0/24",
      "lbName": "[concat('lb-', variables('clusterName'), '-', variables('vmNodeType0Name'))]",
      "lbIPName": "[concat('ip-', variables('clusterName'), '-', variables('vmNodeType0Name'))]",
      "vnetID": "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
      "subnet1Ref": "[concat(variables('vnetID'), '/subnets/', variables('subnet1Name'))]",
      "supportLogStorageAccountName": "[concat('logs', uniqueString(resourceGroup().id))]",
      "applicationDiagnosticsStorageAccountName": "[concat('diags', uniqueString(resourceGroup().id))]",
      "lbID0": "[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]",
      "lbIPConfig0": "[concat(variables('lbID0'), '/frontendIPConfigurations/LoadBalancerIPConfig')]",
      "lbPoolID0": "[concat(variables('lbID0'), '/backendAddressPools/LoadBalancerBEAddressPool')]",
      "lbProbeID0": "[concat(variables('lbID0'), '/probes/FabricGatewayProbe')]",
      "lbHttpProbeID0": "[concat(variables('lbID0'), '/probes/FabricHttpGatewayProbe')]",
      "lbNatPoolID0": "[concat(variables('lbID0'), '/inboundNatPools/LoadBalancerBEAddressNatPool')]",
      "vmNodeType0Name": "Primary",
      "fabricTcpGatewayPort": "19000",
      "fabricHttpGatewayPort": "19080",
      "reverseProxyEndpointPort": "19081",
      "applicationStartPort": "20000",
      "applicationEndPort": "30000",
      "ephemeralStartPort": "49152",
      "ephemeralEndPort": "65534",
      "loadBalancedAppPort1": "80",
      "loadBalancedAppPort2": "8081",
      "certificateStoreValue": "My",
      "appInsightsName": "[concat(parameters('namePart'), '-ai')]",
        "vmssApiVersion": "2017-12-01",
        "resourcesApiVersion": "2017-08-01",
        "operationsManagementApiVersion": "2015-11-01-preview",
        "operationalInsightsApiVersion": "2017-04-26-preview",
        "appInsightApiVersion": "2015-05-01",
        "storageApiVersion": "2017-10-01",
      "vmImagePublisher": "MicrosoftWindowsServer",
      "vmImageOffer": "WindowsServer",
      "vmImageSku": "2016-Datacenter-with-Containers",
      "vmImageVersion": "latest",
      "rdpUserName": "rdpadmin",
      "rdpPassword": "[concat('Rdp!;', uniqueString(resourceGroup().id))]"
   },
   "resources": [
      {
         "name": "[variables('appInsightsName')]",
         "type": "microsoft.insights/components",
         "location": "[resourceGroup().location]",
            "apiVersion": "[variables('appInsightApiVersion')]",
         "properties": {
            "ApplicationId": "[parameters('namePart')]",
            "Application_Type": "web",
            "Flow_Type": "Redfield",
            "Request_Source": "IbizaAIExtension"
         }
      },
      {
            "apiVersion": "[variables('storageApiVersion')]",
         "type": "Microsoft.Storage/storageAccounts",
         "name": "[variables('supportLogStorageAccountName')]",
         "location": "[resourceGroup().location]",
         "tags": {
            "resourceType": "Service Fabric",
            "clusterName": "[variables('clusterName')]",
            "displayName": "SupportLogStorageAccount"
         },
         "sku": {
            "name": "Standard_LRS"
         },
         "kind": "Storage"
      },
      {
            "apiVersion": "[variables('storageApiVersion')]",
         "type": "Microsoft.Storage/storageAccounts",
         "name": "[variables('applicationDiagnosticsStorageAccountName')]",
         "location": "[resourceGroup().location]",
         "tags": {
            "resourceType": "Service Fabric",
            "clusterName": "[variables('clusterName')]",
            "displayName": "DiagnosticsStorageAccount"
         },
         "sku": {
            "name": "Standard_LRS"
         },
         "kind": "Storage"
      },
      {
         "type": "Microsoft.Network/virtualNetworks",
         "condition": "[empty(parameters('clusterSubnetId'))]",
            "apiVersion": "2018-01-01",
         "name": "[variables('virtualNetworkName')]",
         "location": "[resourceGroup().location]",
         "tags": {
            "resourceType": "Service Fabric",
            "clusterName": "[variables('clusterName')]",
            "displayName": "VirtualNetwork"
         },
         "properties": {
            "addressSpace": {
               "addressPrefixes": [
                  "[variables('addressPrefix')]"
               ]
            },
            "subnets": [
               {
                  "name": "[variables('subnet1Name')]",
                  "properties": {
                     "addressPrefix": "[variables('subnet1Prefix')]"
                  }
               }
            ]
         }
      },
      {
            "apiVersion": "2018-01-01",
         "type": "Microsoft.Network/publicIPAddresses",
         "name": "[variables('lbIPName')]",
         "location": "[resourceGroup().location]",
         "tags": {
            "resourceType": "Service Fabric",
            "clusterName": "[variables('clusterName')]",
            "displayName": "PublicIPAddress"
         },
         "properties": {
            "dnsSettings": {
               "domainNameLabel": "[variables('clusterName')]"
            },
            "publicIPAllocationMethod": "Dynamic"
         }
      },
      {
            "apiVersion": "2018-01-01",
         "type": "Microsoft.Network/loadBalancers",
         "name": "[variables('lbName')]",
         "location": "[resourceGroup().location]",
         "dependsOn": [
            "[variables('lbIPName')]"
         ],
         "tags": {
            "resourceType": "Service Fabric",
            "clusterName": "[variables('clusterName')]",
            "displayName": "LoadBalancer"
         },
         "properties": {
            "frontendIPConfigurations": [
               {
                  "name": "LoadBalancerIPConfig",
                  "properties": {
                     "publicIPAddress": {
                        "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('lbIPName'))]"
                     }
                  }
               }
            ],
            "backendAddressPools": [
               {
                  "name": "LoadBalancerBEAddressPool"
               }
            ],
            "loadBalancingRules": [
               {
                  "name": "LBRule",
                  "properties": {
                     "backendAddressPool": {
                        "id": "[variables('lbPoolID0')]"
                     },
                     "backendPort": "[variables('fabricTcpGatewayPort')]",
                     "enableFloatingIP": false,
                     "frontendIPConfiguration": {
                        "id": "[variables('lbIPConfig0')]"
                     },
                     "frontendPort": "[variables('fabricTcpGatewayPort')]",
                     "idleTimeoutInMinutes": 5,
                     "probe": {
                        "id": "[variables('lbProbeID0')]"
                     },
                     "protocol": "Tcp"
                  }
               },
               {
                  "name": "LBHttpRule",
                  "properties": {
                     "backendAddressPool": {
                        "id": "[variables('lbPoolID0')]"
                     },
                     "backendPort": "[variables('fabricHttpGatewayPort')]",
                     "enableFloatingIP": false,
                     "frontendIPConfiguration": {
                        "id": "[variables('lbIPConfig0')]"
                     },
                     "frontendPort": "[variables('fabricHttpGatewayPort')]",
                     "idleTimeoutInMinutes": 5,
                     "probe": {
                        "id": "[variables('lbHttpProbeID0')]"
                     },
                     "protocol": "Tcp"
                  }
               },
               {
                  "name": "AppPortLBRule1",
                  "properties": {
                     "backendAddressPool": {
                        "id": "[variables('lbPoolID0')]"
                     },
                     "backendPort": "[variables('loadBalancedAppPort1')]",
                     "enableFloatingIP": false,
                     "frontendIPConfiguration": {
                        "id": "[variables('lbIPConfig0')]"
                     },
                     "frontendPort": "[variables('loadBalancedAppPort1')]",
                     "idleTimeoutInMinutes": 5,
                     "probe": {
                        "id": "[concat(variables('lbID0'), '/probes/AppPortProbe1')]"
                     },
                     "protocol": "Tcp"
                  }
               },
               {
                  "name": "AppPortLBRule2",
                  "properties": {
                     "backendAddressPool": {
                        "id": "[variables('lbPoolID0')]"
                     },
                     "backendPort": "[variables('loadBalancedAppPort2')]",
                     "enableFloatingIP": false,
                     "frontendIPConfiguration": {
                        "id": "[variables('lbIPConfig0')]"
                     },
                     "frontendPort": "[variables('loadBalancedAppPort2')]",
                     "idleTimeoutInMinutes": 5,
                     "probe": {
                        "id": "[concat(variables('lbID0'), '/probes/AppPortProbe2')]"
                     },
                     "protocol": "Tcp"
                  }
               }
            ],
            "probes": [
               {
                  "name": "FabricGatewayProbe",
                  "properties": {
                     "intervalInSeconds": 5,
                     "numberOfProbes": 2,
                     "port": "[variables('fabricTcpGatewayPort')]",
                     "protocol": "Tcp"
                  }
               },
               {
                  "name": "FabricHttpGatewayProbe",
                  "properties": {
                     "intervalInSeconds": 5,
                     "numberOfProbes": 2,
                     "port": "[variables('fabricHttpGatewayPort')]",
                     "protocol": "Tcp"
                  }
               },
               {
                  "name": "AppPortProbe1",
                  "properties": {
                     "intervalInSeconds": 5,
                     "numberOfProbes": 2,
                     "port": "[variables('loadBalancedAppPort1')]",
                     "protocol": "Tcp"
                  }
               },
               {
                  "name": "AppPortProbe2",
                  "properties": {
                     "intervalInSeconds": 5,
                     "numberOfProbes": 2,
                     "port": "[variables('loadBalancedAppPort2')]",
                     "protocol": "Tcp"
                  }
               }
            ],
            "inboundNatPools": [
               {
                  "name": "LoadBalancerBEAddressNatPool",
                  "properties": {
                     "backendPort": 3389,
                     "frontendIPConfiguration": {
                        "id": "[variables('lbIPConfig0')]"
                     },
                     "frontendPortRangeEnd": 4500,
                     "frontendPortRangeStart": 3389,
                     "protocol": "Tcp"
                  }
               }
            ]
         }
      },
      {
         "apiVersion": "[variables('vmssApiVersion')]",
         "type": "Microsoft.Compute/virtualMachineScaleSets",
         "name": "[variables('vmNodeType0Name')]",
         "location": "[resourceGroup().location]",
         "dependsOn": [
            "[variables('supportLogStorageAccountName')]",
            "[variables('applicationDiagnosticsStorageAccountName')]",
            "[resourceId('microsoft.insights/components/', variables('appInsightsName'))]"
         ],
         "tags": {
            "resourceType": "Service Fabric",
            "clusterName": "[variables('clusterName')]",
            "displayName": "Cluster scale set"
         },
         "properties": {
            "upgradePolicy": {
               "mode": "Automatic"
            },
            "virtualMachineProfile": {
               "extensionProfile": {
                  "extensions": [
                     {
                        "name": "[concat('ServiceFabricNodeVmExt', '_', variables('vmNodeType0Name'))]",
                        "properties": {
                           "type": "ServiceFabricNode",
                           "autoUpgradeMinorVersion": false,
                           "protectedSettings": {
                              "StorageAccountKey1": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')),'2016-01-01').keys[0].value]",
                              "StorageAccountKey2": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')),'2016-01-01').keys[1].value]"
                           },
                           "publisher": "Microsoft.Azure.ServiceFabric",
                           "settings": {
                              "clusterEndpoint": "[reference(variables('clusterName')).clusterEndpoint]",
                              "nodeTypeRef": "[variables('vmNodeType0Name')]",
                              "enableParallelJobs": true,
                              "dataPath": "D:\\\\SvcFab",
                              "durabilityLevel": "Silver",
                              "certificate": {
                                 "thumbprint": "[parameters('certificateThumbprint')]",
                                 "x509StoreName": "[variables('certificateStoreValue')]"
                              }
                           },
                           "typeHandlerVersion": "1.0"
                        }
                     },
                     {
                        "name": "[concat('VMDiagnosticsVmExt', '_', variables('vmNodeType0Name'))]",
                        "properties": {
                           "type": "IaaSDiagnostics",
                           "autoUpgradeMinorVersion": true,
                           "protectedSettings": {
                              "storageAccountName": "[variables('applicationDiagnosticsStorageAccountName')]",
                              "storageAccountKey": "[listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('applicationDiagnosticsStorageAccountName')), '2016-01-01').keys[0].value]"
                           },
                           "publisher": "Microsoft.Azure.Diagnostics",
                           "settings": {
                              "WadCfg": {
                                 "DiagnosticMonitorConfiguration": {
                                    "overallQuotaInMB": "50000",
                                    "sinks": "applicationInsights",
                                    "EtwProviders": {
                                       "EtwEventSourceProviderConfiguration": [
                                          {
                                             "provider": "Microsoft-ServiceFabric-Actors",
                                             "scheduledTransferKeywordFilter": "1",
                                             "scheduledTransferPeriod": "PT5M",
                                             "DefaultEvents": {
                                                "eventDestination": "ServiceFabricReliableActorEventTable"
                                             }
                                          },
                                          {
                                             "provider": "Microsoft-ServiceFabric-Services",
                                             "scheduledTransferPeriod": "PT5M",
                                             "DefaultEvents": {
                                                "eventDestination": "ServiceFabricReliableServiceEventTable"
                                             }
                                          }
                                       ],
                                       "EtwManifestProviderConfiguration": [
                                          {
                                             "provider": "cbd93bc2-71e5-4566-b3a7-595d8eeca6e8",
                                             "scheduledTransferLogLevelFilter": "Information",
                                             "scheduledTransferKeywordFilter": "4611686018427387904",
                                             "scheduledTransferPeriod": "PT5M",
                                             "DefaultEvents": {
                                                "eventDestination": "ServiceFabricSystemEventTable"
                                             }
                                          }
                                       ]
                                    }
                                 },
                                 "SinksConfig": {
                                    "Sink": [
                                       {
                                          "name": "applicationInsights",
                                          "ApplicationInsights": "[reference(concat('microsoft.insights/components/', variables('appInsightsName'))).InstrumentationKey]"
                                       }
                                    ]
                                 }
                              }
                           },
                           "typeHandlerVersion": "1.5"
                        }
                     }
                  ]
               },
               "networkProfile": {
                  "networkInterfaceConfigurations": [
                     {
                        "name": "NIC-0",
                        "properties": {
                           "ipConfigurations": [
                              {
                                 "name": "NIC-0-config",
                                 "properties": {
                                    "loadBalancerBackendAddressPools": [
                                       {
                                          "id": "[variables('lbPoolID0')]"
                                       }
                                    ],
                                    "loadBalancerInboundNatPools": [
                                       {
                                          "id": "[variables('lbNatPoolID0')]"
                                       }
                                    ],
                                    "subnet": {
                                       "id": "[coalesce(parameters('clusterSubnetId'), variables('subnet1Ref'))]"
                                    }
                                 }
                              }
                           ],
                           "primary": true
                        }
                     }
                  ]
               },
               "osProfile": {
                  "adminPassword": "[variables('rdpPassword')]",
                  "adminUsername": "[variables('rdpUserName')]",
                  "computerNamePrefix": "[variables('vmNodeType0Name')]",
                  "secrets": [
                     {
                        "sourceVault": {
                           "id": "[parameters('sourceVaultResourceId')]"
                        },
                        "vaultCertificates": [
                           {
                              "certificateStore": "[variables('certificateStoreValue')]",
                              "certificateUrl": "[parameters('certificateUrlValue')]"
                           }
                        ]
                     }
                  ]
               },
               "storageProfile": {
                  "imageReference": {
                     "publisher": "[variables('vmImagePublisher')]",
                     "offer": "[variables('vmImageOffer')]",
                     "sku": "[variables('vmImageSku')]",
                     "version": "[variables('vmImageVersion')]"
                  },
                  "osDisk": {
                     "caching": "ReadOnly",
                     "createOption": "FromImage",
                     "managedDisk": {
                        "storageAccountType": "Standard_LRS"
                     }
                  }
               }
            }
         },
         "sku": {
            "name": "[parameters('vmNodeSize')]",
            "capacity": "[parameters('vmInstanceCount')]",
            "tier": "Standard"
         }
      },
      {
         "apiVersion": "2017-07-01-preview",
         "type": "Microsoft.ServiceFabric/clusters",
         "name": "[variables('clusterName')]",
         "location": "[resourceGroup().location]",
         "dependsOn": [
            "[variables('supportLogStorageAccountName')]"
         ],
         "tags": {
            "resourceType": "Service Fabric",
            "clusterName": "[variables('clusterName')]",
            "displayName": "Cluster"
         },
         "properties": {
            "certificate": {
               "thumbprint": "[parameters('certificateThumbprint')]",
               "x509StoreName": "[variables('certificateStoreValue')]"
            },
            "clientCertificateCommonNames": [],
            "clientCertificateThumbprints": [],
            "clusterState": "Default",
            "diagnosticsStorageAccountConfig": {
               "blobEndpoint": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')), '2016-01-01').primaryEndpoints.blob]",
               "protectedAccountKeyName": "StorageAccountKey1",
               "queueEndpoint": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')), '2016-01-01').primaryEndpoints.queue]",
               "storageAccountName": "[variables('supportLogStorageAccountName')]",
               "tableEndpoint": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('supportLogStorageAccountName')), '2016-01-01').primaryEndpoints.table]"
            },
            "fabricSettings": [
               {
                  "parameters": [
                     {
                        "name": "ClusterProtectionLevel",
                        "value": "EncryptAndSign"
                     }
                  ],
                  "name": "Security"
               }
            ],
            "addonFeatures": [
               "RepairManager",
               "DnsService"
            ],
            "managementEndpoint": "[concat('https://', reference(variables('lbIPName')).dnsSettings.fqdn, ':', variables('fabricHttpGatewayPort'))]",
            "nodeTypes": [
               {
                  "name": "[variables('vmNodeType0Name')]",
                  "applicationPorts": {
                     "endPort": "[variables('applicationEndPort')]",
                     "startPort": "[variables('applicationStartPort')]"
                  },
                  "clientConnectionEndpointPort": "[variables('fabricTcpGatewayPort')]",
                  "durabilityLevel": "Silver",
                  "ephemeralPorts": {
                     "endPort": "[variables('ephemeralEndPort')]",
                     "startPort": "[variables('ephemeralStartPort')]"
                  },
                  "httpGatewayEndpointPort": "[variables('fabricHttpGatewayPort')]",
                  "isPrimary": true,
                  "vmInstanceCount": "[parameters('vmInstanceCount')]"
               }
            ],
            "provisioningState": "Default",
            "reliabilityLevel": "Silver",
            "reverseProxyCertificate": {
               "thumbprint": "[parameters('certificateThumbprint')]",
               "x509StoreName": "[variables('certificateStoreValue')]"
            },
            "upgradeMode": "Automatic",
            "vmImage": "Windows"
         }
        },
        {
            "apiVersion": "[variables('resourcesApiVersion')]",
            "name": "nestedTemplateOms",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json",
                    "contentVersion": "1.0.0.0",
                    "resources": [
                        {
                            "apiVersion": "[variables('operationsManagementApiVersion')]",
                            "location": "[parameters('omsLocation')]",
                            "name": "[parameters('namePart')]",
                            "type": "Microsoft.OperationsManagement/solutions",
                            "id": "[concat('/subscriptions/', subscription().subscriptionId, '/resourceGroups/', resourceGroup().name, '/providers/Microsoft.OperationsManagement/solutions/', parameters('namePart'))]",
                            "dependsOn": [
                                "[concat('Microsoft.OperationalInsights/workspaces/', parameters('namePart'))]"
                            ],
                            "properties": {
                                "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces/', parameters('namePart'))]"
                            },
                            "plan": {
                                "name": "[parameters('namePart')]",
                                "publisher": "Microsoft",
                                "product": "[Concat('OMSGallery/', parameters('namePart'))]",
                                "promotionCode": ""
                            }
                        },
                        {
                            "apiVersion": "[variables('operationalInsightsApiVersion')]",
                            "name": "[parameters('namePart')]",
                            "location": "[parameters('omsLocation')]",
                            "type": "Microsoft.OperationalInsights/workspaces",
                            "properties": {
                                "sku": {
                                    "name": "Free"
                                }
                            }
                        }
                    ]
                }
            }
      }
   ],
   "outputs": {
      "clusterProperties": {
         "value": "[reference(variables('clusterName'))]",
         "type": "object"
      },
      "rdpPassword": {
         "value": "[variables('rdpPassword')]",
         "type": "string"
      }
   }
}